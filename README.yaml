---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: "terraform-deploykf"

# Tags of this project
tags:
  - terraform
  - terraform-modules
  - reference-implementation
  - reference-architecture

# Categories of this project
categories:
  - terraform-modules/root
  - terraform-components

# Logo for this project
logo: docs/logo_banner.svg

# License of this project
license: "APACHE2"

# Canonical GitHub repo
github_repo: "flaccid/terraform-deploykf"

# Short description of this project
description: |-
  Terraform module for deploying deployKF (Kubeflow distribution).

introduction: |-
  This terraform module is a work in progress. It's intent to provide the plumbing requirements for deployKF and provision it end-to-end for different use cases. User guides will be added in due course for common setups as they become supported.

  Requires an existing kubernetes cluster.

include:
 - "docs/targets.md"
 - "docs/terraform.md"

usage: |-
  Currently a fully automated e2e deployment is not yet possible, however generally the steps are:

  1. Call the module in your terraform state, e.g.:

  ```
  module "deploy-kf" {
    source = "git::https://github.com/flaccid/terraform-deploykf"

    app_of_apps_values  = file("app-of-apps-values.yaml")
    argocd_helm_values  = <<EOF
  configs:
    params:
      server.insecure: true

  server:
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        ingress.kubernetes.io/ssl-redirect: 'true'
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      ingressClassName: nginx
      hosts:
        - argocd.mydomain.com
      tls:
        - hosts:
            - argocd.mydomain.com
          secretName: argocd-mydomain-com-tls
  EOF
    install_app_of_apps = true
  }
  ```
  Populate `app-of-apps-values.yaml` with the values you need per your use case and environment.

  2. Sync the argocd apps per https://www.deploykf.org/guides/getting-started/
  3. Profit

  ### On AWS

  To provision for AWS, set variables `create_s3_buckets` and `create_iam_resources` to `true`.

  Additionally, set `provision_rds_instance` to `true` if desiring to provision and use an RDS instance.

  ### Argo CD UI

  Login with the default username (`admin`) and password retrieved using:

  ```
  echo $(kubectl -n argocd get secret/argocd-initial-admin-secret \
    -o jsonpath="{.data.password}" | base64 -d)
  ``` 

  ### Kubeflow UI

  TBA

  ### Upstream Documentation

  https://www.kubeflow.org/docs/started/installing-kubeflow/#packaged-distributions-of-kubeflow

  #### deployKF

  https://www.deploykf.org/guides/getting-started/

  ##### Pertinent links for this implementation

  - https://github.com/deployKF/deployKF/tree/main/argocd-plugin
  - https://www.deploykf.org/guides/tools/external-mysql/
  - https://www.deploykf.org/guides/tools/external-object-store/
  - https://www.deploykf.org/guides/platform/deploykf-gateway/
  - https://www.deploykf.org/reference/deploykf-values/
  - https://www.deploykf.org/guides/getting-started/#default-login-credentials
  - https://www.kubeflow.org/docs/components/central-dash/access/

  ### Testing

  Populate any required variables in `test/terraform.tfvars`
  ```
  cd test
  export KUBE_CONFIG_PATH=~/.kube/config
  terraform init
  terraform apply
  ```

# Contributors to this project
contributors:
  - name: "Chris Fordham"
    github: "flaccid"
